Index: apache-nutch-1.3/src/java/org/apache/nutch/crawl/Injector.java
===================================================================
--- apache-nutch-1.3.orig/src/java/org/apache/nutch/crawl/Injector.java
+++ apache-nutch-1.3/src/java/org/apache/nutch/crawl/Injector.java
@@ -54,6 +54,8 @@ public class Injector extends Configured
   public static String nutchScoreMDName = "nutch.score";
   /** metadata key reserved for setting a custom fetchInterval for a specific URL */
   public static String nutchFetchIntervalMDName = "nutch.fetchInterval";
+  /** metadata key reserved for forcing a refetch of the given URL */
+  public static String nutchForceFetchMDName = "nutch.forceFetch";
 
   /** Normalize and filter injected urls. */
   public static class InjectMapper implements Mapper<WritableComparable, Text, Text, CrawlDatum> {
@@ -162,9 +164,12 @@ public class Injector extends Configured
                        OutputCollector<Text, CrawlDatum> output, Reporter reporter)
       throws IOException {
       boolean oldSet = false;
+      Text force_fetch = null;
       while (values.hasNext()) {
         CrawlDatum val = values.next();
-        if (val.getStatus() == CrawlDatum.STATUS_INJECTED) {
+	if (val.getStatus() == CrawlDatum.STATUS_INJECTED) {
+	  force_fetch = (Text)
+		  val.getMetaData().get(new Text(nutchForceFetchMDName));
           injected.set(val);
           injected.setStatus(CrawlDatum.STATUS_DB_UNFETCHED);
         } else {
@@ -173,7 +178,10 @@ public class Injector extends Configured
         }
       }
       CrawlDatum res = null;
-      if (oldSet) res = old; // don't overwrite existing value
+      // don't overwrite existing value
+      if (oldSet &&
+	    !(force_fetch != null && force_fetch.equals(new Text("true"))))
+	res = old;
       else res = injected;
 
       output.collect(key, res);
